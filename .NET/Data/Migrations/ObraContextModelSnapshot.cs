// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tickett.Data;

#nullable disable

namespace Tickett.Data.Migrations
{
    [DbContext(typeof(ObraContext))]
    partial class ObraContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tickett.Models.Butaca", b =>
                {
                    b.Property<int>("ButacaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ButacaId"), 1L, 1);

                    b.Property<bool>("Libre")
                        .HasColumnType("bit");

                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.HasKey("ButacaId");

                    b.HasIndex("ObraId");

                    b.ToTable("Butaca");
                });

            modelBuilder.Entity("Tickett.Models.Obra", b =>
                {
                    b.Property<int>("ObraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObraId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DiaObra")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("HoraObra")
                        .HasColumnType("time");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObraId");

                    b.ToTable("Obras");

                    b.HasData(
                        new
                        {
                            ObraId = 1,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 105,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 17, 0, 0, 0),
                            Imagen = "../IMAGENES/donjuan.jpg",
                            Precio = 25,
                            Titulo = "Don Juan"
                        },
                        new
                        {
                            ObraId = 2,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 120,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 18, 30, 0, 0),
                            Imagen = "../IMAGENES/celestina.jpg",
                            Precio = 15,
                            Titulo = "Celestina"
                        },
                        new
                        {
                            ObraId = 3,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 115,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 16, 0, 0, 0),
                            Imagen = "../IMAGENES/doble-o-nada.jpg",
                            Precio = 20,
                            Titulo = "Doble o nada"
                        },
                        new
                        {
                            ObraId = 4,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 140,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 19, 15, 0, 0),
                            Imagen = "../IMAGENES/campeones.jpg",
                            Precio = 35,
                            Titulo = "Campeones"
                        },
                        new
                        {
                            ObraId = 5,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 2, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 135,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 18, 0, 0, 0),
                            Imagen = "../IMAGENES/el-mago-pop.jpg",
                            Precio = 30,
                            Titulo = "El mago Pop"
                        },
                        new
                        {
                            ObraId = 6,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 100,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 12, 0, 0, 0),
                            Imagen = "../IMAGENES/ElReyLeon3Aniv.jpg",
                            Precio = 10,
                            Titulo = "El Rey Leon"
                        },
                        new
                        {
                            ObraId = 7,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 90,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 20, 0, 0, 0),
                            Imagen = "../IMAGENES/fango.jpg",
                            Precio = 40,
                            Titulo = "Fango"
                        },
                        new
                        {
                            ObraId = 8,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 110,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 20, 30, 0, 0),
                            Imagen = "../IMAGENES/funcion-sale-mal.jpg",
                            Precio = 30,
                            Titulo = "La Funcion que Sale Mal"
                        },
                        new
                        {
                            ObraId = 9,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 120,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 15, 15, 0, 0),
                            Imagen = "../IMAGENES/ilusionate.jpg",
                            Precio = 15,
                            Titulo = "Ilusionate"
                        },
                        new
                        {
                            ObraId = 10,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 105,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 22, 15, 0, 0),
                            Imagen = "../IMAGENES/jose-el-sonador.jpg",
                            Precio = 25,
                            Titulo = "Jose el sonñador"
                        },
                        new
                        {
                            ObraId = 11,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 125,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 21, 30, 0, 0),
                            Imagen = "../IMAGENES/laponia.jpg",
                            Precio = 20,
                            Titulo = "Laponia"
                        },
                        new
                        {
                            ObraId = 12,
                            Descripcion = "false",
                            DiaObra = new DateTime(2024, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Duracion = 30,
                            Genero = "Drama",
                            HoraObra = new TimeSpan(0, 19, 15, 0, 0),
                            Imagen = "../IMAGENES/las-mil-y-una-noches.jpg",
                            Precio = 25,
                            Titulo = "Las mil y una noches"
                        });
                });

            modelBuilder.Entity("Tickett.Models.ObraReparto", b =>
                {
                    b.Property<int>("ObraId")
                        .HasColumnType("int");

                    b.Property<int>("RepartoId")
                        .HasColumnType("int");

                    b.HasKey("ObraId", "RepartoId");

                    b.HasIndex("RepartoId");

                    b.ToTable("ObraRepartos");
                });

            modelBuilder.Entity("Tickett.Models.Reparto", b =>
                {
                    b.Property<int>("RepartoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepartoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepartoId");

                    b.ToTable("Repartos");
                });

            modelBuilder.Entity("Tickett.Models.Butaca", b =>
                {
                    b.HasOne("Tickett.Models.Obra", "Obra")
                        .WithMany("ListaButacas")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obra");
                });

            modelBuilder.Entity("Tickett.Models.ObraReparto", b =>
                {
                    b.HasOne("Tickett.Models.Obra", "Obra")
                        .WithMany("ListaObraReparto")
                        .HasForeignKey("ObraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tickett.Models.Reparto", "Reparto")
                        .WithMany("ListaObraReparto")
                        .HasForeignKey("RepartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obra");

                    b.Navigation("Reparto");
                });

            modelBuilder.Entity("Tickett.Models.Obra", b =>
                {
                    b.Navigation("ListaButacas");

                    b.Navigation("ListaObraReparto");
                });

            modelBuilder.Entity("Tickett.Models.Reparto", b =>
                {
                    b.Navigation("ListaObraReparto");
                });
#pragma warning restore 612, 618
        }
    }
}
